import org.apache.tools.ant.taskdefs.condition.Os
import org.jetbrains.kotlin.gradle.plugin.mpp.NativeBuildType
import org.jetbrains.kotlin.gradle.plugin.mpp.NativeOutputKind

plugins {
    id 'kotlin-multiplatform'
    id 'kotlinx-serialization'
}
repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "https://dl.bintray.com/kodein-framework/Kodein-DI" }
    maven { url "https://dl.bintray.com/soywiz/soywiz" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    maven { url "https://kotlin.bintray.com/ktor" }
    maven { url "https://dl.bintray.com/spekframework/spek-dev" }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://drill4j.bintray.com/nativewebsockets" }
}
def preset
if (Os.isFamily(Os.FAMILY_MAC)) preset = "macosX64"
if (Os.isFamily(Os.FAMILY_UNIX)) preset = "linuxX64"
if (Os.isFamily(Os.FAMILY_WINDOWS)) preset = "mingwX64"


def ex
if (Os.isFamily(Os.FAMILY_UNIX)) ex = "so"
else if (Os.isFamily(Os.FAMILY_WINDOWS)) ex = "dll"

def pref
if (Os.isFamily(Os.FAMILY_UNIX)) pref = "lib"
else if (Os.isFamily(Os.FAMILY_WINDOWS)) pref = ""


kotlin {
    targets {
        fromPreset(presets.jvm, 'adminPart')
        fromPreset(presets.jvm, 'agentPart')
        fromPreset(kotlin.presets[preset], 'exPlugin')
        configure([exPlugin]) {
            compilations.main.outputKinds('DYNAMIC')
            compilations.main.linkerOpts = ["drill-api/$preset/${pref}main.$ex"]
        }
    }
    sourceSets {
        exPluginMain {
            dependencies {
                implementation project(":nativeprojects:drill-jvmapi")
//                implementation fileTree(file("drill-api/kotlinx-coroutines-core.klib"))
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0"
                implementation project(":drill-plugin-api:drill-agent-part")
            }
        }
        agentPartMain {
            dependencies {
                //fixme 6 only..
                implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
                implementation project(":drill-plugin-api:drill-agent-part")
                implementation project(":drill-common")
            }
        }
        adminPartMain {
            dependencies {
                implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
                implementation project(":drill-plugin-api:drill-admin-part")
                implementation project(":drill-common")
            }
        }

    }
}



adminPartJar {
    archiveName = "admin-part.jar"
    from(file("./plugin_config.json")) {
        into("static")
    }

}
agentPartJar {
    dependsOn "linkMainDebugSharedExPlugin"
    doFirst {
        copy {
            from(file("${kotlin.targets.exPlugin.compilations.main.getBinary(NativeOutputKind.valueOf("DYNAMIC"), NativeBuildType.DEBUG)}"))
            into file("drill-api/$preset/pack/nativePart")
        }
        copy {
            from(file("drill-api/$preset/${pref}main.$ex"))
            into file("drill-api/$preset/pack/nativePart/drill-api/$preset")
        }
    }
    archiveName = "agent-part.jar"
    from(file("drill-api/$preset/pack"))
    from(file("./plugin_config.json")) {
        into("static")
    }
}

task packPlugin(type: Jar) {
    from(adminPartJar, agentPartJar)
    destinationDir = file("../../distr/adminStorage")
}


task buildNativePlugin {
    group = "app"
    dependsOn "packPlugin"

}