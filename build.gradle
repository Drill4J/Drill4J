//import org.apache.tools.ant.taskdefs.condition.Os
//import org.gradle.internal.jvm.Jvm
//import org.jetbrains.kotlin.gradle.plugin.mpp.NativeBuildType
//import org.jetbrains.kotlin.gradle.plugin.mpp.NativeOutputKind
//
//plugins {
//    id 'kotlin-multiplatform'
//    id 'kotlinx-serialization'
//
//}
//
//group 'com.epam'
//version '0.0.1'
//
//apply plugin: 'maven-publish'
//
//repositories {
//    mavenCentral()
//    mavenLocal()
//    jcenter()
//    maven { url "https://dl.bintray.com/kodein-framework/Kodein-DI" }
//    maven { url "https://dl.bintray.com/soywiz/soywiz" }
//    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
//    maven { url "https://kotlin.bintray.com/ktor" }
//    maven { url "https://dl.bintray.com/spekframework/spek-dev" }
//    maven { url "https://kotlin.bintray.com/kotlinx" }
//    maven { url "https://drill4j.bintray.com/nativewebsockets" }
//
//
//}
////NativeOutputKind
//def jdkHome = Jvm.current().javaHome.toPath()
//def includeBase = jdkHome.resolve("include")
//
//def includeAddition
//
//if (Os.isFamily(Os.FAMILY_MAC)) {
//    includeAddition = includeBase.resolve("darwin")
//}
//if (Os.isFamily(Os.FAMILY_UNIX)) {
//    includeAddition = includeBase.resolve("linux")
//}
//if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//    includeAddition = includeBase.resolve("win32")
//
//}
//def preset
//if (Os.isFamily(Os.FAMILY_MAC)) preset = "macosX64"
//if (Os.isFamily(Os.FAMILY_UNIX)) preset = "linuxX64"
//if (Os.isFamily(Os.FAMILY_WINDOWS)) preset = "mingwX64"
//
//
//kotlin {
//    targets {
//        fromPreset(presets.jvm, 'agent')
//        fromPreset(presets.jvm, 'admin')
//        fromPreset(presets.jvm, 'drillAdminPart')
//        fromPreset(presets.jvm, 'drillAgentPart')
//        fromPreset(presets.jvm, 'pluginCommon')
//        fromPreset(kotlin.targets.metadata.preset, 'agentCommon')
//
//        fromPreset(kotlin.presets[preset], 'nativeCommon')
//        fromPreset(kotlin.presets[preset], 'knasm')
//        fromPreset(kotlin.presets[preset], 'kjni')
//        fromPreset(kotlin.presets[preset], 'napi')
//
//        configure([nativeCommon, kjni]) {
//            compilations.main.outputKinds('DYNAMIC')
//
//            compilations.main {
//                cinterops {
//                    jvmapi {
//                        includeDirs includeBase, includeAddition, "./src/nativeInterop/cpp"
//                    }
//                }
//            }
//
//        }
//
//    }
//
//
//    sourceSets {
//        commonMain {
//            dependencies {
//                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
//                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.9.1"
//            }
//        }
//        commonTest {
//            dependencies {
//                implementation 'org.jetbrains.kotlin:kotlin-test-common'
//                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
//            }
//        }
//        agentCommonMain {
//            dependencies {
//                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
//                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.9.1"
//            }
//        }
//        agentCommonTest {
//            dependencies {
//                implementation 'org.jetbrains.kotlin:kotlin-test-common'
//                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
//            }
//        }
//        napiMain {
//            dependencies {
//                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0"
//            }
//
//        }
//        nativeCommonMain {
//            dependsOn agentCommonMain
//            dependsOn knasmMain
//            dependsOn kjniMain
//            dependsOn napiMain
//            dependencies {
//                implementation("com.soywiz:korio:1.1.3-drill")
//                implementation("com.soywiz:klogger:1.2.1")
//                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0"
//                implementation 'io.github.microutils:kotlin-logging:1.6.22'
//            }
//            kotlin {
//                srcDir("src/nativeCommonMain/gen")
//            }
//        }
//        knasmMain {
//            dependencies {
//                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0"
//            }
//        }
//        kjniMain {
//            kotlin {
//                srcDir("src/kjniMain/basicprimitive")
//            }
//            dependencies {
//
//                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0"
//            }
//        }
//        nativeCommonTest
//        agentMain {
//            dependsOn drillAgentPartMain
//            dependsOn agentCommonMain
//            dependencies {
//                implementation("com.soywiz:klogger:1.2.1")
//                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
//                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.9.1'
//                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
//            }
//        }
//        agentTest {
//            dependencies {
//                implementation 'org.jetbrains.kotlin:kotlin-test'
//                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
//            }
//        }
//        adminMain {
//            dependsOn drillAdminPartMain
//            dependsOn pluginCommonMain
//            dependencies {
//                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.9.1'
//                implementation("com.soywiz:klogger:1.2.1")
//                implementation("org.litote.kmongo:kmongo:3.9.0")
//                implementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.1.1")
//                implementation("io.ktor:ktor-auth:1.1.2")
//                implementation("io.ktor:ktor-auth-jwt:1.1.2")
//                //fixme temp solution
//                implementation(fileTree(file("testLib/kodein-di-generic-jvm-6.0.1.jar")))
//                implementation(fileTree(file("testLib/kodein-di-core-jvm-6.0.1.jar")))
////                implementation("org.kodein.di:kodein-di-generic-jvm:5.2.0")
//                implementation("io.ktor:ktor-server-netty:1.1.2")
//                implementation("io.ktor:ktor-locations:1.1.2")
//                implementation("io.ktor:ktor-gson:1.1.2")
//                implementation("io.ktor:ktor-server-core:1.1.2")
//                implementation("io.ktor:ktor-websockets:1.1.2")
//                implementation("io.ktor:ktor-html-builder:1.1.2")
//                implementation("ch.qos.logback:logback-classic:1.2.1")
//
//
//            }
//        }
//        adminTest {
//            dependencies {
//                implementation("io.ktor:ktor-server-test-host:1.1.2")
//                implementation("org.junit.jupiter:junit-jupiter-api:5.3.1")
//                implementation("org.spekframework.spek2:spek-dsl-jvm:2.0.0-alpha.2")
//                implementation("org.junit.jupiter:junit-jupiter-engine:5.3.1")
//                implementation("org.spekframework.spek2:spek-runner-junit5:2.0.0-alpha.2")
//            }
//        }
//        drillAdminPartMain {
//            dependsOn pluginCommonMain
//            dependencies {
//                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
//            }
//        }
//        drillAgentPartMain {
//            dependsOn pluginCommonMain
//            dependencies {
//                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
//            }
//        }
//        pluginCommonMain {
//            dependencies {
//                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
//                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.9.1'
//            }
//        }
//    }
//}
//
//task generateClasses {
//    doFirst {
////        com.epam.kjni.build.NativeBridgeGeneratorKt.generate(null, file("src/nativeCommonMain/gen"))
//    }
//}
//
//afterEvaluate {
//    for (target in ["nativeCommon"]) {
//        String taskName = "copyResourcesToExecutable_${target}"
//        def targetTestTask = tasks.getByName("${target}Test")
//        tasks.create(name: taskName, type: Copy) {
//            for (sourceSet in kotlin.sourceSets) {
//                from sourceSet.resources
//            }
//            into new File(targetTestTask.inputs.properties.executable).parentFile
//        }
//        targetTestTask.dependsOn(taskName)
//    }
//}
//
//
//cinteropJvmapiNativeCommon.dependsOn("generateClasses")
//
//agentJar {
//    destinationDirectory = file("distr")
//    archiveFileName = "drillRuntime.jar"
//    from {
//        configurations.agentMainImplementation.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}
//
//task runDrillAdmin() {
//    group = "application"
//    doLast {
//        javaexec {
//            classpath = (kotlin.targets['admin'].compilations.main.compileDependencyFiles)
//            classpath(adminJar)
//            main = "io.ktor.server.netty.EngineMain"
//            jvmArgs(
//                    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006",
//                    "-Xmx2g"
////                    , "-agentpath:C:\\Users\\Igor_Kuzminykh\\xxDrill4J\\distr\\main.dll=drillInstallationDir="
//            )
//        }
//    }
//}
//
//runDrillAdmin.dependsOn('adminJar')
//
//


//task runAgent {
//    dependsOn(gradle.includedBuild("spring-petclinic-kotlin").task(":bootRun").resolveTask())
//    group = "application"
//}
//task buildPlugin {
//    dependsOn(gradle.includedBuild("drill-exception-plugin-native").task(":buildNatvePlugin").resolveTask())
//    group = "application"
//}
//
//
//task deleteAndCopyAgent {
//    dependsOn "napiMainKlibrary"
//    dependsOn "linkMainDebugSharedNativeCommon"
//    doFirst {
//        delete file("distr/main.dll")
//    }
//    doLast {
//        copy {
//            from file("${kotlin.targets.nativeCommon.compilations.main.getBinary(NativeOutputKind.valueOf("DYNAMIC"), NativeBuildType.DEBUG)}")
//            into file("distr")
//        }
//        copy {
//            from file("${kotlin.targets.nativeCommon.compilations.main.getBinary(NativeOutputKind.valueOf("DYNAMIC"), NativeBuildType.DEBUG)}")
//            into file("./plugins/drill-exception-plugin-native/drill-api/$preset")
//        }
//        copy {
//            from file("build/classes/kotlin/nativeCommon/main/drill4j-cinterop-jvmapi.klib")
//            into file("./plugins/drill-exception-plugin-native/drill-api/$preset")
//        }
//        copy {
//            from file("build/classes/kotlin/napi/main/drill4j.klib")
//            into file("./plugins/drill-exception-plugin-native/drill-api/$preset")
//        }
//    }
//}
//
//task buildAgent {
//    dependsOn agentJar
//    dependsOn deleteAndCopyAgent
//    group = "application"
//}
//
//build.dependsOn buildAgent
//build.dependsOn publishDrillAdminPartPublicationToMavenLocal
//build.dependsOn publishDrillAgentPartPublicationToMavenLocal



task runAgent {
    dependsOn(gradle.includedBuild("spring-petclinic-kotlin").task(":bootRun").resolveTask())
    group = "application"
}