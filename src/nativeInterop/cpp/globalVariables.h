//
// Created by Igor Kuzminykh on 22/04/2018.
//

#include "jvmti.h"
#include "jni.h"
#include <stdbool.h>


typedef struct {
 jvmtiEnv *jvmti;
 jboolean vm_is_started;
 jrawMonitorID lock;
 bool S_JVMTI_EVENT_BREAKPOINT;
 bool IS_JVMTI_EVENT_CLASS_FILE_LOAD_HOOK;
 bool IS_JVMTI_EVENT_CLASS_LOAD;
 bool IS_JVMTI_EVENT_CLASS_PREPARE;
 bool IS_JVMTI_EVENT_COMPILED_METHOD_LOAD;
 bool IS_JVMTI_EVENT_COMPILED_METHOD_UNLOAD;
 bool IS_JVMTI_EVENT_DATA_DUMP_REQUEST;
 bool IS_JVMTI_EVENT_DYNAMIC_CODE_GENERATED;
 bool IS_JVMTI_EVENT_EXCEPTION;
 bool IS_JVMTI_EVENT_EXCEPTION_CATCH;
 bool IS_JVMTI_EVENT_FIELD_ACCESS;
 bool IS_JVMTI_EVENT_FIELD_MODIFICATION;
 bool IS_JVMTI_EVENT_FRAME_POP;
 bool IS_JVMTI_EVENT_GARBAGE_COLLECTION_FINISH;
 bool IS_JVMTI_EVENT_GARBAGE_COLLECTION_START;
 bool IS_JVMTI_EVENT_METHOD_ENTRY;
 bool IS_JVMTI_EVENT_METHOD_EXIT;
 bool IS_JVMTI_EVENT_MONITOR_CONTENDED_ENTER;
 bool IS_JVMTI_EVENT_MONITOR_CONTENDED_ENTERED;
 bool IS_JVMTI_EVENT_MONITOR_WAIT;
 bool IS_JVMTI_EVENT_MONITOR_WAITED;
 bool IS_JVMTI_EVENT_NATIVE_METHOD_BIND;
 bool IS_JVMTI_EVENT_OBJECT_FREE;
 bool IS_JVMTI_EVENT_RESOURCE_EXHAUSTED;
 bool IS_JVMTI_EVENT_SINGLE_STEP;
 bool IS_JVMTI_EVENT_THREAD_END;
 bool IS_JVMTI_EVENT_THREAD_START;
 bool IS_JVMTI_EVENT_VM_DEATH;
 bool IS_JVMTI_EVENT_VM_INIT;
 bool IS_JVMTI_EVENT_VM_OBJECT_ALLOC;
 bool IS_JVMTI_EVENT_VM_START;
 bool IS_JVMTI_EVENT_BREAKPOINT;
} GlobalAgentData;


static GlobalAgentData *gdata;





