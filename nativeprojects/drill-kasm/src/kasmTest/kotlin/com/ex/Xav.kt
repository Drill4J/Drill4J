package com.ex

import org.objectweb.kn.asm.*
import org.objectweb.kn.asm.Opcodes.Companion.ALOAD
import org.objectweb.kn.asm.Opcodes.Companion.ASTORE
import org.objectweb.kn.asm.Opcodes.Companion.GETSTATIC
import org.objectweb.kn.asm.Opcodes.Companion.INVOKEVIRTUAL
import org.objectweb.kn.asm.commons.AdviceAdapter
import kotlin.test.Test

class Xav {

    @Test
    fun asd() {
        val w = byteArrayOf(-54, -2, -70, -66, 0, 0, 0, 50, 0, 61, 1, 0, 24, 99, 111, 109, 47, 101, 112, 97, 109, 47, 100, 114, 105, 108, 108, 47, 105, 110, 115, 116, 114, 47, 65, 83, 77, 7, 0, 1, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 7, 0, 3, 1, 0, 7, 101, 109, 117, 108, 97, 116, 101, 1, 0, 28, 40, 76, 115, 117, 110, 47, 110, 105, 111, 47, 99, 104, 47, 68, 105, 114, 101, 99, 116, 66, 117, 102, 102, 101, 114, 59, 41, 86, 1, 0, 35, 76, 111, 114, 103, 47, 106, 101, 116, 98, 114, 97, 105, 110, 115, 47, 97, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 47, 78, 111, 116, 78, 117, 108, 108, 59, 1, 0, 2, 120, 120, 8, 0, 8, 1, 0, 30, 107, 111, 116, 108, 105, 110, 47, 106, 118, 109, 47, 105, 110, 116, 101, 114, 110, 97, 108, 47, 73, 110, 116, 114, 105, 110, 115, 105, 99, 115, 7, 0, 10, 1, 0, 23, 99, 104, 101, 99, 107, 80, 97, 114, 97, 109, 101, 116, 101, 114, 73, 115, 78, 111, 116, 78, 117, 108, 108, 1, 0, 39, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 86, 12, 0, 12, 0, 13, 10, 0, 11, 0, 14, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 121, 115, 116, 101, 109, 7, 0, 16, 1, 0, 3, 111, 117, 116, 1, 0, 21, 76, 106, 97, 118, 97, 47, 105, 111, 47, 80, 114, 105, 110, 116, 83, 116, 114, 101, 97, 109, 59, 12, 0, 18, 0, 19, 9, 0, 17, 0, 20, 1, 0, 19, 106, 97, 118, 97, 47, 105, 111, 47, 80, 114, 105, 110, 116, 83, 116, 114, 101, 97, 109, 7, 0, 22, 1, 0, 7, 112, 114, 105, 110, 116, 108, 110, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 86, 12, 0, 24, 0, 25, 10, 0, 23, 0, 26, 1, 0, 4, 116, 104, 105, 115, 1, 0, 26, 76, 99, 111, 109, 47, 101, 112, 97, 109, 47, 100, 114, 105, 108, 108, 47, 105, 110, 115, 116, 114, 47, 65, 83, 77, 59, 1, 0, 25, 76, 115, 117, 110, 47, 110, 105, 111, 47, 99, 104, 47, 68, 105, 114, 101, 99, 116, 66, 117, 102, 102, 101, 114, 59, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 12, 0, 31, 0, 32, 10, 0, 4, 0, 33, 1, 0, 8, 73, 78, 83, 84, 65, 78, 67, 69, 1, 0, 8, 60, 99, 108, 105, 110, 105, 116, 62, 1, 0, 17, 76, 107, 111, 116, 108, 105, 110, 47, 77, 101, 116, 97, 100, 97, 116, 97, 59, 1, 0, 2, 109, 118, 3, 0, 0, 0, 1, 3, 0, 0, 0, 13, 1, 0, 2, 98, 118, 3, 0, 0, 0, 0, 3, 0, 0, 0, 3, 1, 0, 1, 107, 1, 0, 2, 100, 49, 1, 0, 71, -64, -128, 24, 10, 2, 24, 2, 10, 2, 16, -64, -128, 10, 2, 8, 2, 10, 2, 16, 2, 10, -64, -128, 10, 2, 24, 2, 10, -64, -128, 8, -61, -122, 2, 24, -64, -128, 50, 2, 48, 1, 66, 7, 8, 2, -62, -94, 6, 2, 16, 2, 74, 14, 16, 3, 26, 2, 48, 4, 50, 6, 16, 5, 26, 2, 48, 6, -62, -88, 6, 7, 1, 0, 2, 100, 50, 1, 0, 0, 1, 0, 11, 100, 114, 105, 108, 108, 45, 97, 103, 101, 110, 116, 10, 0, 2, 0, 33, 12, 0, 35, 0, 29, 9, 0, 2, 0, 51, 1, 0, 6, 65, 83, 77, 46, 107, 116, 1, 0, 4, 67, 111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98, 108, 101, 1, 0, 36, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 49, 0, 2, 0, 4, 0, 0, 0, 1, 0, 25, 0, 35, 0, 29, 0, 0, 0, 3, 0, 17, 0, 5, 0, 6, 0, 2, 0, 54, 0, 0, 0, 70, 0, 2, 0, 2, 0, 0, 0, 14, 43, 18, 9, -72, 0, 15, -78, 0, 21, 43, -74, 0, 27, -79, 0, 0, 0, 2, 0, 55, 0, 0, 0, 10, 0, 2, 0, 6, 0, 9, 0, 13, 0, 10, 0, 56, 0, 0, 0, 22, 0, 2, 0, 0, 0, 14, 0, 28, 0, 29, 0, 0, 0, 0, 0, 14, 0, 8, 0, 30, 0, 1, 0, 57, 0, 0, 0, 7, 1, 0, 1, 0, 7, 0, 0, 0, 2, 0, 31, 0, 32, 0, 1, 0, 54, 0, 0, 0, 47, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 34, -79, 0, 0, 0, 2, 0, 55, 0, 0, 0, 6, 0, 1, 0, 0, 0, 6, 0, 56, 0, 0, 0, 12, 0, 1, 0, 0, 0, 5, 0, 28, 0, 29, 0, 0, 0, 8, 0, 36, 0, 32, 0, 1, 0, 54, 0, 0, 0, 37, 0, 2, 0, 1, 0, 0, 0, 13, -69, 0, 2, 89, -73, 0, 50, 75, 42, -77, 0, 52, -79, 0, 0, 0, 1, 0, 55, 0, 0, 0, 6, 0, 1, 0, 0, 0, 6, 0, 3, 0, 58, 0, 0, 0, 2, 0, 53, 0, 59, 0, 0, 0, 83, 83, 77, 65, 80, 10, 65, 83, 77, 46, 107, 116, 10, 75, 111, 116, 108, 105, 110, 10, 42, 83, 32, 75, 111, 116, 108, 105, 110, 10, 42, 70, 10, 43, 32, 49, 32, 65, 83, 77, 46, 107, 116, 10, 99, 111, 109, 47, 101, 112, 97, 109, 47, 100, 114, 105, 108, 108, 47, 105, 110, 115, 116, 114, 47, 65, 83, 77, 10, 42, 76, 10, 49, 35, 49, 44, 49, 49, 58, 49, 10, 42, 69, 10, 0, 60, 0, 0, 0, 76, 0, 1, 0, 37, 0, 5, 0, 38, 91, 0, 3, 73, 0, 39, 73, 0, 39, 73, 0, 40, 0, 41, 91, 0, 3, 73, 0, 39, 73, 0, 42, 73, 0, 43, 0, 44, 73, 0, 39, 0, 45, 91, 0, 1, 115, 0, 46, 0, 47, 91, 0, 8, 115, 0, 29, 115, 0, 48, 115, 0, 32, 115, 0, 5, 115, 0, 48, 115, 0, 8, 115, 0, 30, 115, 0, 49)
        val cr = ClassReader(w)

        val cv = ClassWriter(ClassReader.EXPAND_FRAMES or ClassWriter.COMPUTE_FRAMES)
//    cr.accept(IOUtilsAdapter(cv), 0)
//        cr.accept(IOUtilsAdapter(cv), ClassReader.EXPAND_FRAMES or ClassWriter.COMPUTE_FRAMES)
        cr.accept(cv, 0)
        val toByteArray = cv.toByteArray()
        println(w.contentToString())
        println( ClassReader(toByteArray).b.contentToString())


    }
}


class IOUtilsAdapter(val cvs: ClassVisitor) : ClassVisitor(Opcodes.ASM5, cvs), Opcodes {

    override fun visitMethod(
        access: Int, name: String, desc: String,
        signature: String?, exceptions: Array<String?>?
    ): MethodVisitor? {
        try {


            val mv = cvs.visitMethod(access, name, desc, signature, exceptions)
            val q = object : AdviceAdapter(Opcodes.ASM5, mv!!, access, name, desc) {
                override fun onMethodEnter() {
                    println("ololo")
                    visitLdcInsn("cretin");
                    val newLocal = newLocal(Type.getObjectType("java/lang/String"))
                    visitVarInsn(ASTORE, newLocal);
                    visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
                    visitVarInsn(ALOAD, newLocal);
                    visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/Object;)V");
                }

            }
//            val l0 = Label()
//            mv?.visitLabel(l0)
////            mv?.visitLineNumber(12, l0)
//            mv?.visitLdcInsn("lol")
//            mv?.visitVarInsn(ASTORE, 2);
//            mv?.visitFieldInsn(
//                Opcodes.GETSTATIC,
//                "java/lang/System",
//                "out",
//                "Ljava/io/PrintStream;"
//            )
//            mv?.visitVarInsn(Opcodes.LLOAD, 2)
//            mv?.visitMethodInsn(
//                Opcodes.INVOKEVIRTUAL,
//                "java/io/PrintStream",
//                "println",
//                "(J)V"
//            )
            return q
        } catch (ex: Throwable) {
            println(name)
            throw ex
        }

    }


}