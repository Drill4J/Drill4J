## You can generate a custom docker compose file automatically on http://reportportal.io/download (Step 2)

## This is example of Docker Compose for ReportPortal
## Do not forget to configure data volumes for production usage

## Execute 'docker-compose -p reportportal up -d --force-recreate'
## to start all containers in daemon mode
## Where:
##      '-p reportportal' -- specifies container's prefix (project name)
##      '-d' -- enables daemon mode
##      '--force-recreate' -- forces re-recreating of all containers

version: '2'

services:

  mongodb:
    image: mongo:3.4
    ports:
        - "27017:27017"
    restart: always

  registry:
    image: consul:1.0.6
    volumes:
      - ./data/consul:/consul/data
    ports:
        - "8500:8500"
#        - "8300:8300"
#        - "53:8600/udp"
    command: "agent -server -bootstrap-expect=1 -ui -client 0.0.0.0"
    environment:
        - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    restart: always

  uat:
    image: reportportal/service-authorization:4.2.0
    #ports:
    #  - "9999:9999"
    depends_on:
      - mongodb
    environment:
      - RP_PROFILES=docker
      - RP_SESSION_LIVE=86400 #in seconds
#      - RP_MONGO_URI=mongodb://localhost:27017
    restart: always

  gateway:
    image: traefik:1.6.6
    ports:
      - "8080:8080" # HTTP exposed
#      - "8081:8081" # HTTP Administration exposed
    command:
      - --consulcatalog.endpoint=registry:8500
      - --defaultEntryPoints=http
      - --entryPoints=Name:http Address::8080
      - --web
      - --web.address=:8081
    restart: always

  index:
    image: reportportal/service-index:4.2.0
    environment:
      - RP_SERVER_PORT=8080
      - RP_PROXY_CONSUL=true
    depends_on:
       - registry
       - gateway
    restart: always

  api:
    image: reportportal/service-api:4.3.4
    depends_on:
      - mongodb
    volumes:
      - ./distr:/data
    ports:
      - "5008:5008"
    environment:
      - RP_PROFILES=docker
      - JAVA_OPTS=-Xmx1g -XX:ErrorFile=/data/crashdump.log -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5008 -agentpath:/data/libmain.so=drillInstallationDir=/data,adminAddress=host.docker.internal:8090,agentId=Petclinic
#      - RP_MONGO_URI=mongodb://localhost:27017
#    restart: always

  ui:
    image: reportportal/service-ui:4.3.6
    environment:
      - RP_SERVER.PORT=8080
      - RP_CONSUL.TAGS=urlprefix-/ui opts strip=/ui
      - RP_CONSUL.ADDRESS=registry:8500
    restart: always
